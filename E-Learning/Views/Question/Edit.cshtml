@model E_Learning.Models.QuestionSet

@{
    ViewBag.Title = "Edit";
}


<div class=" text-center  bg-warning m-0 p-3 vivify unfold " style="border-radius:1.5rem;">
    <h2 class="text-center text-capitalize text-dark vivify unfold"><i class="la la la-pencil-square-o"></i>Edit Question Details</h2>
</div>

<hr />
<div class="container-fluid">

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                @*<div class="card-header text-capitalize bg-light text-center">
                    <div class="card-title text-center "><h3>Edit Topic</h3></div>
                </div>*@
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group required ">


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.QuestionSetId)

                            <div class="form-group">
                                <h2 class="text-left text-dark ">

                                    @Html.LabelFor(model => model.QuestionDescription, htmlAttributes: new { @class = "control-label " })
                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.QuestionDescription, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.QuestionDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h2 class="text-left text-dark ">
                                    @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "control-label " })
                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h2 class="text-left text-dark ">
                                    @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "control-label " })
                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h2 class="text-left text-dark ">
                                    @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "control-label " })
                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h2 class="text-left text-dark ">
                                    @Html.LabelFor(model => model.Option4, htmlAttributes: new { @class = "control-label " })
                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <h2 class="text-left text-dark ">
                                    @Html.LabelFor(model => model.CorrectAnswer, htmlAttributes: new { @class = "control-label " })
                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.CorrectAnswer, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.CorrectAnswer, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="form-group">
                                <h2 class="text-left text-dark ">
                                    @Html.LabelFor(model => model.Mark, htmlAttributes: new { @class = "control-label " })

                                </h2>
                                <div class="">
                                    @Html.EditorFor(model => model.Mark, new { htmlAttributes = new { @class = "form-control shadow" } })
                                    @Html.ValidationMessageFor(model => model.Mark, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 offset-md-3">

                                    <button type="submit" id="btndelete" value="Save" class="btn btn-info btn-block badge-primary " style="font-size:1.5rem;">Save &nbsp;<i class="fa fa-save  fa-xs"></i></button>

                                </div>
                            </div>


                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
                  


                    @section Scripts {
                        @Scripts.Render("~/bundles/jqueryval")
                        <script src="~/Scripts/requiredAsterik.js"></script>
                        <script src="~/Content/toastr/toastr.min.js"></script>
                        <link href="~/Content/toastr/toastr.css" rel="stylesheet" />
                        <script>
                            $(document).ready(function () {


                            });
                        </script>
                    }
